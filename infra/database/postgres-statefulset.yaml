apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: postgres
        image: kartoza/postgis:15-3.3
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DBNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_DBNAME 
        - name: POSTGRES_MULTIPLE_EXTENSIONS
          value: postgis,hstore,postgis_topology,postgis_raster,pgrouting
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_SHARED_BUFFERS
          value: "512MB"
        - name: POSTGRES_EFFECTIVE_CACHE_SIZE
          value: "1536MB"
        - name: POSTGRES_WORK_MEM
          value: "16MB"
        volumeMounts:
          - name: postgres-data
            mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 30
          periodSeconds: 15
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc